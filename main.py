import os
import logging
from pathlib import Path

from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import (
    Application,
    CommandHandler,
    CallbackQueryHandler,
    ContextTypes,
    PicklePersistence,
)

# --- 1. ุงูุฅุนุฏุงุฏุงุช ---
# ุณููุฑุฃ ุงูุชููู ูู ูุชุบูุฑุงุช ุงูุจูุฆุฉ ููุง ูู ุงูุญุงู ูู ุงูุงุณุชุถุงูุงุช
# ูุถุนูุง ุงูุชููู ุงููุฏูู ููููุฉ ุงูุชุฑุงุถูุฉ ููุท ููุชูุถูุญุ ูุฌุจ ุนููู ุชุบููุฑู ูู ุงูุงุณุชุถุงูุฉ
TELEGRAM_TOKEN = os.getenv("TELEGRAM_TOKEN", "7885095446:AAHrqDP_AYb3Zk6Omj9eRCzZ-kVS_TlH998")

# --- 2. ุฅุนุฏุงุฏ ุชุณุฌูู ุงููุนูููุงุช ููุชุงุจุนุฉ ุนูู ุงูุจูุช ---
logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)
logger = logging.getLogger(__name__)

# --- 3. ุชุนุฑูู ุฏูุงู ุงูุฃูุงูุฑ ูุงูุงุณุชุฌุงุจุงุช ---

async def start_command(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    ูุชู ุงุณุชุฏุนุงุก ูุฐู ุงูุฏุงูุฉ ุนูุฏ ุฅุฑุณุงู ุงููุณุชุฎุฏู ููุฃูุฑ /start.
    ุชุฑุณู ุฑุณุงูุฉ ุชุฑุญูุจ ูุน ุงูุฑุตูุฏ ุงูุญุงูู ูุฒุฑ ุงูุชุฌููุน.
    """
    user = update.effective_user
    logger.info(f"ุงููุณุชุฎุฏู {user.first_name} ({user.id}) ุจุฏุฃ ุงูุจูุช.")
    
    # ูุญุตู ุนูู ุฑุตูุฏ ุงููุณุชุฎุฏู ูู ุงูุจูุงูุงุช ุงููุญููุธุฉ. ุฅุฐุง ูู ููู ููุฌูุฏุงูุ ูุจุฏุฃู ุจุตูุฑ.
    # context.user_data ูู ูุงููุณ ุฎุงุต ุจูู ูุณุชุฎุฏู ููุชู ุญูุธู ุชููุงุฆูุงู.
    balance = context.user_data.setdefault('balance', 0)
    
    # ูุต ุงูุฑุณุงูุฉ
    text = (
        "ูุฑุญุจุงู ุจู ูู ุจูุช ุฎุฏูุงุช ุณูุดูุงู ููุฏูุง ุงุญุชุฑุงูู ๐\n\n"
        f"๐ฐ **ุฑุตูุฏู ุงูุญุงูู:** {balance} ููุทุฉ"
    )
    
    # ุฅูุดุงุก ุงูุฒุฑ ุงูุดูุงู (Inline Button)
    keyboard = InlineKeyboardMarkup([
        [InlineKeyboardButton("๐ ุงุฌูุน ุงูุฑุตูุฏ (3+ ููุงุท)", callback_data='collect_points')]
    ])
    
    # ุฅุฑุณุงู ุงูุฑุณุงูุฉ ูุน ุงูุฒุฑ
    await update.message.reply_text(text, reply_markup=keyboard, parse_mode='Markdown')

async def button_handler(update: Update, context: ContextTypes.DEFAULT_TYPE) -> None:
    """
    ูุชู ุงุณุชุฏุนุงุก ูุฐู ุงูุฏุงูุฉ ุนูุฏ ุงูุถุบุท ุนูู ุฃู ุฒุฑ ุดูุงู.
    """
    query = update.callback_query
    
    # ูุฌุจ ุงูุฅุฌุงุจุฉ ุนูู ุงูู callback query ุฃููุงู ูุฅููุงู ุนูุงูุฉ ุงูุชุญููู ุนูุฏ ุงููุณุชุฎุฏู
    await query.answer()
    
    # ุงูุชุญูู ูู ุฃู ุงูุฒุฑ ุงููุถุบูุท ูู ุฒุฑ ุชุฌููุน ุงูููุงุท
    if query.data == 'collect_points':
        user_id = query.from_user.id
        
        # ุฒูุงุฏุฉ ุฑุตูุฏ ุงููุณุชุฎุฏู ุจููุฏุงุฑ 3 ููุงุท
        current_balance = context.user_data.setdefault('balance', 0)
        new_balance = current_balance + 3
        context.user_data['balance'] = new_balance
        
        logger.info(f"ุงููุณุชุฎุฏู {user_id} ุฌูุน 3 ููุงุท. ุงูุฑุตูุฏ ุงูุฌุฏูุฏ: {new_balance}")
        
        # ุชุญุฏูุซ ูุต ุงูุฑุณุงูุฉ ุจุงูุฑุตูุฏ ุงูุฌุฏูุฏ
        new_text = (
            "ูุฑุญุจุงู ุจู ูู ุจูุช ุฎุฏูุงุช ุณูุดูุงู ููุฏูุง ุงุญุชุฑุงูู ๐\n\n"
            f"๐ฐ **ุฑุตูุฏู ุงูุญุงูู:** {new_balance} ููุทุฉ"
        )
        
        # ุฅูุดุงุก ุงูุฒุฑ ูุฑุฉ ุฃุฎุฑู
        keyboard = InlineKeyboardMarkup([
            [InlineKeyboardButton("๐ ุงุฌูุน ุงูุฑุตูุฏ (3+ ููุงุท)", callback_data='collect_points')]
        ])
        
        try:
            # ูุญุงููุฉ ุชุนุฏูู ุงูุฑุณุงูุฉ ุงูุฃุตููุฉ ุจุงููุนูููุงุช ุงูุฌุฏูุฏุฉ
            await query.edit_message_text(text=new_text, reply_markup=keyboard, parse_mode='Markdown')
            # ุฅุธูุงุฑ ุฅุดุนุงุฑ ูุคูุช ูููุณุชุฎุฏู ูุคูุฏ ุงูุนูููุฉ
            await query.answer(text=f"๐ ุชู ุฅุถุงูุฉ 3 ููุงุท! ุฑุตูุฏู ุงูุขู {new_balance}.", show_alert=False)
        except Exception as e:
            # ุฅุฐุง ูุดู ุงูุชุนุฏูู (ูุซูุงู ุงูุฑุณุงูุฉ ูุฏููุฉ ุฌุฏุงู)ุ ูุณุฌู ุงูุฎุทุฃ
            logger.error(f"ูุดู ูู ุชุนุฏูู ุงูุฑุณุงูุฉ: {e}")
            # ูููู ุฅุฑุณุงู ุฑุณุงูุฉ ุฌุฏูุฏุฉ ูุจุฏูู ุฅุฐุง ุฃุฑุฏูุง
            # await context.bot.send_message(chat_id=query.message.chat_id, text=f"ุฑุตูุฏู ุงูุขู ูู: {new_balance}")

async def error_handler(update: object, context: ContextTypes.DEFAULT_TYPE) -> None:
    """ุชุณุฌูู ุงูุฃุฎุทุงุก ุงูุชู ุชุญุฏุซ."""
    logger.error("ุญุฏุซ ุงุณุชุซูุงุก ุฃุซูุงุก ุงูุชุนุงูู ูุน ุชุญุฏูุซ:", exc_info=context.error)


# --- 4. ุงูุฏุงูุฉ ุงูุฑุฆูุณูุฉ ูุชุดุบูู ุงูุจูุช ---
def main() -> None:
    """ุชุดุบูู ุงูุจูุช ูุฅุนุฏุงุฏู ูุญูุธ ุงูุจูุงูุงุช."""
    logger.info("๐ ุจุฏุก ุชุดุบูู ุงูุจูุช...")

    # ุงูุชุญูู ูู ูุฌูุฏ ุงูุชููู
    if not TELEGRAM_TOKEN:
        logger.critical("ุฎุทุฃ ูุงุฏุญ: ูู ูุชู ุงูุนุซูุฑ ุนูู TELEGRAM_TOKEN. ูุฑุฌู ุฅุนุฏุงุฏู.")
        return
        
    # ุฅุนุฏุงุฏ ูุธุงู ุญูุธ ุงูุจูุงูุงุช (Persistence)
    # ุณูุชู ุฅูุดุงุก ููู "bot_data" ูุญูุธ ุฑุตูุฏ ุงููุณุชุฎุฏููู ููู ุงููุนูููุงุช ุชููุงุฆูุงู
    persistence = PicklePersistence(filepath=Path("bot_data.pickle"))
    
    # ุฅูุดุงุก ุงูุชุทุจูู ูุฑุจุทู ุจุงูุชููู ููุธุงู ุญูุธ ุงูุจูุงูุงุช
    application = (
        Application.builder()
        .token(TELEGRAM_TOKEN)
        .persistence(persistence)
        .build()
    )

    # ุฅุถุงูุฉ ูุนุงูุฌุงุช ุงูุฃูุงูุฑ ูุงูุถุบุท ุนูู ุงูุฃุฒุฑุงุฑ
    application.add_handler(CommandHandler("start", start_command))
    application.add_handler(CallbackQueryHandler(button_handler))
    
    # ุฅุถุงูุฉ ูุนุงูุฌ ุงูุฃุฎุทุงุก (ููู ุฌุฏุงู)
    application.add_error_handler(error_handler)

    # ุชุดุบูู ุงูุจูุช ูู ูุถุน ุงูุงุณุชุทูุงุน (polling)
    application.run_polling()
    logger.info("๐ ุชู ุฅููุงู ุงูุจูุช.")


if __name__ == "__main__":
    main()
